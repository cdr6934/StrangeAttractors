
# Chapter 1 

1.1 
```{r}
library(ggplot2)
library(tidyverse)

```

## Chapter 1: Order and Chaos

This sensitivity to initial conditions has been dubbed the
butterfly effect, because it is hypothetically possible for a butterfly flapping its wings
in Brazil to set off tornadoes in Texas. Since we can never know the initial conditions
with perfect precision, long-term prediction is impossible, even when the physical
laws are deterministic and exactly known. It has been shown that the predictability
horizon in weather forecasting cannot be more than two or three weeks.

```{r}
# Basic interest  
interest <- 0.1
init <- 100
years <- 50
init*(1+interest)

init*(1+interest)^years
```


```{r}
r <- 3.2
x_n <- 0.5
iter <- 50
xn <- function(r, x_n, iter)
{
  while(iter > 0) 
  {
    iter <- iter - 1 
    x_n <- r*x_n*(1-x_n)*1.0
  }
  xn(r, x_n, iter) 
}
xn(r, x_n, iter)
```

```{r}

xn_iter <- function(r, x_n)
{
    x_n <- r*x_n*(1-x_n)*1.0
    x_n
}
```


Period-2 limit cycle 
```{r}

#inputs 
r <- 3.2
x_n <- 0.5
iter <- 50


xn<- data_frame(x =1:iter, y = 0)

for (i in 1:iter)
{
  x_n <- xn_iter(r, x_n)
  xn$y[i] <- x_n
}

data.frame(xn) %>% ggplot(aes(x,y)) + geom_line()
```

Period-4 limit cycle 
```{r}
#inputs 
r <- 3.5
x_n <- 0.345491
xn<- data_frame(x =seq(0,4,0.001), y = 0)

for (i in 1:nrow(xn))
{
  x_n <- xn_iter(r, x_n)
  xn$y[i] <- x_n
}

data.frame(xn) %>% ggplot(aes(x,y)) + geom_point()
```

Chaotic
```{r}
#inputs 
r <- 4
x_n <- 0.345
xn<- data_frame(x =seq(0,4,0.001), y = 0)

for (i in 1:nrow(xn))
{
  x_n <- xn_iter(r, x_n)
  xn$y[i] <- x_n
}

data.frame(xn) %>% ggplot(aes(x,y)) + geom_point()
```


# Feigenbaum diagram 
```{r}

logistic.map <- function(r, x, N, M){
  ## r: bifurcation parameter
  ## x: initial value
  ## N: number of iteration
  ## M: number of iteration points to be returned
  z <- 1:N
  z[1] <- x
  for(i in c(1:(N-1))){
    z[i+1] <- r *z[i]  * (1 - z[i])
  }
  ## Return the last M iterations 
  z[c((N-M):N)]
}

## Set scanning range for bifurcation parameter r
my.r <- seq(2, 4, by=0.003)

Orbit <- sapply(my.r, logistic.map,  x=0.1, N=1000, M=300)
Orbit <- as.vector(Orbit)
r <- sort(rep(my.r, 301))

plot(Orbit ~ r, pch=".")

#data.frame(xn) %>% ggplot(aes(x,y)) + geom_point()
```
```

